{"version":3,"file":"static/js/297.7233ba67.chunk.js","mappings":"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","sources":["hooks/useLazyLoadImage.js","pages/TopArtists.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst useLazyLoadImage = (count) => {\r\n  const [isVisible, setIsVisible] = useState(Array(count).fill(false));\r\n  const refs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (refs.current) {\r\n      refs.current.forEach((ref, index) => {\r\n        if (ref) {\r\n          const observer = new IntersectionObserver(\r\n            (entries) => {\r\n              entries.forEach((entry) => {\r\n                if (entry.isIntersecting && entry.target instanceof Element) {\r\n                  setIsVisible((prev) => ({ ...prev, [index]: true }));\r\n                  // setIsVisible((prev) => {\r\n                  //   const newState = [...prev];\r\n                  //   newState[index] = true;\r\n                  //   return newState;\r\n                  // });\r\n                  observer.unobserve(entry.target);\r\n                }\r\n              });\r\n            },\r\n            {\r\n              root: null,\r\n              rootMargin: \"50px 0px 0px 0px\",\r\n              threshold: 0.01,\r\n            }\r\n          );\r\n          observer.observe(ref);\r\n        }\r\n      });\r\n    }\r\n  }, [refs, count]);\r\n\r\n  const registerRef = (ref) => {\r\n    if (ref && !refs.current.includes(ref)) {\r\n      refs.current.push(ref);\r\n      setIsVisible((prev) => ({ ...prev, [refs.current.indexOf(ref)]: false }));\r\n    }\r\n  };\r\n\r\n  return [registerRef, isVisible];\r\n};\r\n\r\nexport default useLazyLoadImage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navigation } from \"../components\";\r\nimport { useGetSongTrackQuery } from \"../redux/services/shazam\";\r\nimport useLazyLoadImage from \"../hooks/useLazyLoadImage\";\r\n\r\nexport default function TopArtists() {\r\n  const { data } = useGetSongTrackQuery();\r\n  const [registerRef, isVisible] = useLazyLoadImage(data?.tracks?.length || 0);\r\n  // const [ref, isVisible] = useLazyLoadImage();\r\n\r\n  const [imageLoadingStates, setImageLoadingStates] = useState(\r\n    data?.tracks ? Object.fromEntries(data.tracks.map((artist, i) => [i, true])) : {}\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data?.tracks) {\r\n      setImageLoadingStates((prevState) => {\r\n        const newStates = Object.fromEntries(data.tracks.map((artist, i) => [i, true]));\r\n        return { ...prevState, ...newStates };\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const handleImageLoad = (index) => {\r\n    setImageLoadingStates((prevStates) => ({\r\n      ...prevStates,\r\n      [index]: false,\r\n    }));\r\n  };\r\n\r\n  // console.log(\"Loading\", imageLoadingStates);\r\n  console.log(\"visible\", isVisible);\r\n  // console.log(\"ref\", ref);\r\n  // console.log(\"length\", data?.tracks?.length);\r\n  // console.log(\"length\", Array(data?.tracks?.length).fill(false));\r\n\r\n  return (\r\n    <div className=\"  flex h-full w-full flex-col   bg-light_bg_Main py-3 dark:bg-dark_bg_Main\">\r\n      <div className=\"flex items-center justify-between px-4\">\r\n        <h2 className=\"font-Montserrat text-2xl text-light_txt_Main dark:text-dark_txt_Main \">\r\n          Top Artist\r\n        </h2>\r\n        <Navigation />\r\n      </div>\r\n      <div className=\"hide-scrollbar grid h-full w-full grid-cols-2 justify-center justify-items-center overflow-y-scroll md:grid-cols-3 \">\r\n        {data?.tracks?.map((artist, i) => (\r\n          <Link key={i} to={`/artists/${artist?.artists[0].adamid}`}>\r\n            <div\r\n              ref={registerRef}\r\n              className=\"my-2 flex h-full w-36 flex-col items-center justify-center\"\r\n            >\r\n              {imageLoadingStates[i] && (\r\n                <div className=\"h-28 w-28 animate-pulse rounded-full bg-blue-700 dark:bg-slate-600 md:h-32 md:w-32\" />\r\n              )}\r\n              <div\r\n                className={\r\n                  imageLoadingStates[i]\r\n                    ? \"hidden\"\r\n                    : \"h-28 w-28 overflow-hidden rounded-full md:h-32 md:w-32\"\r\n                }\r\n              >\r\n                <img\r\n                  src={!isVisible[i] ? \"\" : artist.images.background}\r\n                  alt=\"artists\"\r\n                  className={\r\n                    imageLoadingStates[i]\r\n                      ? \"hidden\"\r\n                      : \"h-28 w-28 transform overflow-hidden rounded-full shadow-md transition-transform duration-700 hover:scale-125 md:h-32 md:w-32\"\r\n                  }\r\n                  onLoad={() => handleImageLoad(i)}\r\n                  onError={() =>\r\n                    setImageLoadingStates((prevStates) => ({\r\n                      ...prevStates,\r\n                      [i]: { ...prevStates[i], hasError: true },\r\n                    }))\r\n                  }\r\n                />\r\n              </div>\r\n              <p className=\"mt-2 w-32 truncate text-center font-Montserrat text-sm font-semibold text-light_txt_Main dark:text-dark_txt_Main\">\r\n                {artist.subtitle}\r\n              </p>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Navigation } from \"../components\";\r\n// import { useGetSongTrackQuery } from \"../redux/services/shazam\";\r\n\r\n// export default function TopArtists() {\r\n//   const { data } = useGetSongTrackQuery();\r\n\r\n//   const [imageLoadingStates, setImageLoadingStates] = useState(\r\n//     data?.tracks ? Object.fromEntries(data.tracks.map((artist, i) => [i, true])) : {}\r\n//   );\r\n\r\n//   useEffect(() => {\r\n//     if (data?.tracks) {\r\n//       setImageLoadingStates((prevState) => {\r\n//         const newStates = Object.fromEntries(data.tracks.map((artist, i) => [i, true]));\r\n//         return { ...prevState, ...newStates };\r\n//       });\r\n//     }\r\n//   }, [data]);\r\n\r\n//   const handleImageLoad = (index) => {\r\n//     setImageLoadingStates((prevStates) => ({\r\n//       ...prevStates,\r\n//       [index]: false,\r\n//     }));\r\n//   };\r\n\r\n//   console.log(\"Loading\", imageLoadingStates);\r\n\r\n//   return (\r\n//     <div className=\"  flex h-full w-full flex-col   bg-light_bg_Main py-3 dark:bg-dark_bg_Main\">\r\n//       <div className=\"flex items-center justify-between px-4\">\r\n//         <h2 className=\"font-Montserrat text-2xl text-light_txt_Main dark:text-dark_txt_Main \">\r\n//           Top Artist\r\n//         </h2>\r\n//         <Navigation />\r\n//       </div>\r\n//       <div className=\"hide-scrollbar grid h-full w-full grid-cols-3 justify-center justify-items-center overflow-y-scroll \">\r\n//         {data?.tracks?.map((artist, i) => (\r\n//           <Link key={i} to={`/artists/${artist?.artists[0].adamid}`}>\r\n//             <div className=\"  h- flex w-36 flex-col items-center  justify-center\">\r\n//               {imageLoadingStates[i] && (\r\n//                 <div className=\" h-32 w-32 animate-pulse rounded-full bg-blue-700 dark:bg-slate-600\"></div>\r\n//               )}\r\n//               <div\r\n//                 className={\r\n//                   imageLoadingStates[i] ? \"hidden\" : \"h-32 w-32 overflow-hidden  rounded-full  \"\r\n//                 }\r\n//               >\r\n//                 <img\r\n//                   src={artist.images.background}\r\n//                   alt=\"artists\"\r\n//                   loading=\"eager\"\r\n//                   className={\r\n//                     imageLoadingStates[i]\r\n//                       ? \"hidden\"\r\n//                       : \"h-32 w-32 transform overflow-hidden rounded-full shadow-md transition-transform duration-700 hover:scale-125\"\r\n//                   }\r\n//                   onLoad={() => handleImageLoad(i)}\r\n//                   onError={() =>\r\n//                     setImageLoadingStates((prevStates) => ({ ...prevStates, [i]: true }))\r\n//                   }\r\n//                 />\r\n//               </div>\r\n\r\n//               <p className=\" mt-1 w-32  truncate text-center font-Montserrat text-sm font-semibold text-light_txt_Main dark:text-dark_txt_Main\">\r\n//                 {artist.subtitle}\r\n//               </p>\r\n//             </div>\r\n//           </Link>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"names":["count","_useState","useState","Array","fill","_useState2","_slicedToArray","isVisible","setIsVisible","refs","useRef","useEffect","current","forEach","ref","index","observer","IntersectionObserver","entries","entry","isIntersecting","target","Element","prev","_objectSpread","_defineProperty","unobserve","root","rootMargin","threshold","observe","includes","push","indexOf","TopArtists","_data$tracks","_data$tracks2","data","useGetSongTrackQuery","_useLazyLoadImage","useLazyLoadImage","tracks","length","_useLazyLoadImage2","registerRef","Object","fromEntries","map","artist","i","imageLoadingStates","setImageLoadingStates","prevState","newStates","console","log","_jsxs","className","children","_jsx","Navigation","Link","to","concat","artists","adamid","src","images","background","alt","onLoad","prevStates","onError","hasError","subtitle"],"sourceRoot":""}