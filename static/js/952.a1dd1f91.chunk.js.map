{"version":3,"file":"static/js/952.a1dd1f91.chunk.js","mappings":"mOAUe,SAASA,IAGtB,IAAAC,GAAkCC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,MAAM,IAA7DC,EAAUJ,EAAVI,WAAYC,EAASL,EAATK,UAEpBC,GAAiEC,EAAAA,EAAAA,MAAnDC,EAAaF,EAAnBG,KAAiCC,EAAmBJ,EAA/BK,WAC7BC,GAAoCC,EAAAA,EAAAA,UAAS,wBAAuBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7DI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAEhCI,GAKIC,EAAAA,EAAAA,IAAwBH,GAJpBI,EAASF,EAAfT,KACYY,EAAqBH,EAAjCP,WACOW,EAAUJ,EAAjBK,MACWC,EAAYN,EAAvBO,UASF,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6FAA4FC,SAAA,EACzGC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CACVtB,cAAeA,EACfQ,WAAYA,EACZC,cAAeA,EACfN,WAAYD,KAEdmB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2EAA0EC,SAC7E,OAATR,QAAS,IAATA,OAAS,EAATA,EAAWW,OAAOC,KAAI,SAACC,EAAMC,GAAC,OAC7BL,EAAAA,EAAAA,KAACM,EAAAA,GAAQ,CAEPD,EAAGA,EACHD,KAAMA,EACNxB,KAAMW,EACNf,UAAWA,EACXD,WAAYA,EACZO,WAAYU,EACZC,WAAYA,EACZE,aAAcA,GARTS,EAAKG,IASV,QAKZ,C","sources":["pages/Discover.jsx"],"sourcesContent":["import { Loading, SongCard, Error, SelectGenre } from \"../components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  useGetSongListQuery,\r\n  useGetSongsByGenreQuery,\r\n  useGetSongTrackQuery,\r\n} from \"../redux/services/shazam\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Discover() {\r\n  // const { data, isFetching, error } = useGetSongTrackQuery();\r\n  // console.log(data);\r\n  const { activeSong, isPlaying } = useSelector((state) => state.player);\r\n\r\n  const { data: dataListGenre, isFetching: isFetchingListQuery } = useGetSongListQuery();\r\n  const [genreTitle, setGenreTitle] = useState(\"genre-global-chart-1\");\r\n\r\n  const {\r\n    data: dataGenre,\r\n    isFetching: isFetchingSongByGenre,\r\n    error: errorGenre,\r\n    isLoading: loadingGenre,\r\n  } = useGetSongsByGenreQuery(genreTitle);\r\n\r\n  // console.log(loadingGenre);\r\n  // console.log(isFetchingSongByGenre);\r\n\r\n  // if (isFetchingSongByGenre) return <Loading />;\r\n  // if (errorGenre) return <Error />;\r\n\r\n  return (\r\n    <div className=\"hide-scrollbar h-full w-full  overflow-y-scroll bg-light_bg_Main py-3 dark:bg-dark_bg_Main\">\r\n      <SelectGenre\r\n        dataListGenre={dataListGenre}\r\n        genreTitle={genreTitle}\r\n        setGenreTitle={setGenreTitle}\r\n        isFetching={isFetchingListQuery}\r\n      />\r\n      <div className=\" grid  grid-cols-2 place-items-center gap-4 p-2 md:grid-cols-3 md:gap-8 \">\r\n        {dataGenre?.tracks.map((song, i) => (\r\n          <SongCard\r\n            key={song.key}\r\n            i={i}\r\n            song={song}\r\n            data={dataGenre}\r\n            isPlaying={isPlaying}\r\n            activeSong={activeSong}\r\n            isFetching={isFetchingSongByGenre}\r\n            errorGenre={errorGenre}\r\n            loadingGenre={loadingGenre}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Discover","_useSelector","useSelector","state","player","activeSong","isPlaying","_useGetSongListQuery","useGetSongListQuery","dataListGenre","data","isFetchingListQuery","isFetching","_useState","useState","_useState2","_slicedToArray","genreTitle","setGenreTitle","_useGetSongsByGenreQu","useGetSongsByGenreQuery","dataGenre","isFetchingSongByGenre","errorGenre","error","loadingGenre","isLoading","_jsxs","className","children","_jsx","SelectGenre","tracks","map","song","i","SongCard","key"],"sourceRoot":""}